app [main] { pf: platform "https://github.com/roc-lang/basic-cli/releases/download/0.15.0/SlwdbJ-3GR7uBWQo6zlmYWNYOxnvo8r6YABXD-45UOw.tar.br" }

import pf.File
import pf.Arg
import "data/NormalizationTest.txt" as file : Str
import Helpers
#import pf.Stdout

template =
    """
    ## WARNING: This file is automatically generated. Do not edit it manually. ##
    app [main] { pf: platform "https://github.com/roc-lang/basic-cli/releases/download/0.15.0/SlwdbJ-3GR7uBWQo6zlmYWNYOxnvo8r6YABXD-45UOw.tar.br" }


    import CodePoint exposing [CodePoint]
    import pf.Stdout
    import pf.Utc
    import Normalization

    convertedU32 : U32 -> CodePoint
    convertedU32 = \\cp ->
        when CodePoint.fromU32 cp is
        Ok x -> x
        Err _ -> crash "Invalid code point!"

    converted : List U32 -> List CodePoint
    converted = \\cps ->
        List.map cps convertedU32

    $(tests)

    """

TestData : {nfc: List U32, nfd: List U32, nfkd: List U32, nfkc: List U32}

makeNfcTest : TestData -> Str
makeNfcTest = \data ->
    """

        $(Inspect.toStr data)

    """

parseLine : Str -> Result TestData [Comment]
parseLine = \str ->
    when Helpers.startsWithHex str is
      Err _ -> Err Comment
      Ok s ->
        when Str.split s ";" is
            [nfcStr, nfdStr, nfkcStr, nfkdStr, ..] ->
                nfc = Str.split nfcStr " " |> List.map Helpers.hexStrToU32
                nfd = Str.split nfdStr " " |> List.map Helpers.hexStrToU32
                nfkc = Str.split nfkcStr " " |> List.map Helpers.hexStrToU32
                nfkd = Str.split nfkdStr " " |> List.map Helpers.hexStrToU32
                Ok {nfc, nfd, nfkd, nfkc}
            _ -> Err Comment

tests = file |> Str.trim |> Str.split "\n" |> List.keepOks parseLine |> List.map makeNfcTest |> Str.joinWith "\n"

main =


    when Arg.list! {} |> List.get 1 is
        Err _ -> Task.err (InvalidArguments "USAGE: roc run InternalNormalizationTestGen.roc -- path/to/package/")
        Ok arg -> File.writeUtf8 "$(Helpers.removeTrailingSlash arg)/InternalNormalizationTest.roc" template
